{"version":3,"sources":["components/TemperatureToggle.js","removeList/removeList.js","components/CityRow.js","components/CitiesList.js","components/CitySelection.js","capitalize/capitalize.js","components/HeadContainer.js","components/WeatherProperties.js","App.js","index.js"],"names":["TemperatureToggle","setUnits","search","className","onMouseDown","onClick","e","target","classList","add","document","querySelector","remove","removeCitiesList","list","style","display","CityRow","name","country","setQuery","useState","variant","setVariant","ListGroup","Item","onMouseOut","onMouseOver","CitiesList","cityList","map","city","lat","CitySelection","onKeyPress","onChange","value","weather","query","onHideInput","key","innerHTML","window","screen","width","type","placeholder","onKeyDown","length","slice","capitalizeFirstLetter","string","charAt","toUpperCase","HeadContainer","setWeather","units","getLocation","navigator","geolocation","getCurrentPosition","showPosition","console","log","position","lon","coords","latitude","longitude","fetch","then","response","json","data","cities","filter","includes","useEffect","WeatherProperties","src","icon","alt","description","Math","round","main","temp","wind","speed","pressure","humidity","clouds","all","App","fetchWeather","a","axios","get","params","q","APPID","Spinner","animation","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cc6f0ce6.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst TemperatureToggle = ({setUnits, search}) => {\n    function onToggleForCelsuim(e) {\n        e.target.classList.add('active');\n        document.querySelector('.fahrenheit').classList.remove('active');\n        search(e)\n    }\n\n    function onToggleForFahrenheit(e) {\n        e.target.classList.add('active');\n        document.querySelector('.celsius').classList.remove('active');\n        search(e)\n    }\n    return (\n        <div className='temperature-toggle-block'>\n            <span className='temperature-toggle__deg'>ยบ</span>\n            <div className='temperature-toggle'>\n                <button className='temperature-toggle__btn celsius active'\n                        onMouseDown={() => setUnits('metric')}\n                        onClick={onToggleForCelsuim}>C\n                </button>\n                <button className='temperature-toggle__btn fahrenheit'\n                        onMouseDown={() => setUnits('imperial')}\n                        onClick={onToggleForFahrenheit}>F\n                </button>\n            </div>\n        </div>\n    )\n};\nexport default TemperatureToggle;","export function removeCitiesList() {\n    const list = document.querySelector('.list-group')\n    if (list) {\n        list.style.display = 'none';\n    }\n}","import React, {useState} from 'react';\nimport {ListGroup} from \"react-bootstrap\";\nimport { removeCitiesList} from \"../removeList/removeList\";\n\nconst CityRow = ({name, country, setQuery}) => {\n    const [variant, setVariant] = useState('')\n    const onRemoveList = () => {\n        setQuery(name)\n        removeCitiesList()\n    }\n    return (\n        <ListGroup.Item className='list-group-item'\n                        onMouseOut={() => setVariant('')}\n                        onMouseOver={() => setVariant('success')}\n                        onClick={onRemoveList}\n                        variant={variant}>\n            {name} {country}\n        </ListGroup.Item>\n    )\n};\nexport default CityRow;","import React from 'react';\nimport {ListGroup} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CitiesList.scss'\nimport CityRow from \"./CityRow\";\n\nconst CitiesList = ({cityList, setQuery}) => {\n\n    return (\n        <ListGroup className='list-group list-group-flush'>\n            {cityList.map((city) => <CityRow key={`${city.lat}${city.name}`} {...city} setQuery={setQuery}/>)}\n        </ListGroup>\n    )\n}\nexport default CitiesList;","import React from 'react';\nimport './CitySelection.scss'\nimport CitiesList from \"./CitiesList\";\n\nconst CitySelection = ({onKeyPress, onChange, value, weather, query, cityList, setQuery}) => {\n    const onHideInput = (e) => {\n       if((e.key === 'Enter' || e.target.innerHTML === 'OK') && weather) {\n           document.querySelector('.container-city').style.display = 'none';\n           document.querySelector('.block-choice').style.display = 'block';\n           document.querySelector('.current-city').style.display = 'block';\n           if(window.screen.width < 670) {\n               document.querySelector('.temperature-toggle-block').style.display = 'flex';\n           }\n       }\n    }\n    return (\n        <div className='container-city'>\n            <input className='input-city'\n                   type=\"text\"\n                   placeholder='Search...'\n                   value={value}\n                   onChange={onChange}\n                   onKeyPress={onKeyPress}\n                   onKeyDown={onHideInput}\n            />\n            <button className='btn-city' onMouseDown={onKeyPress} onClick={onHideInput}>OK</button>\n            {query.length >= 1 && <CitiesList cityList={cityList.slice(0, 5)} setQuery={setQuery}/>}\n        </div>\n    )\n}\n\nexport default CitySelection;","export function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}","import React, {useEffect} from 'react';\nimport cities from 'cities.json';\nimport TemperatureToggle from \"./TemperatureToggle\";\nimport CitySelection from \"./CitySelection\";\nimport './HeadContainer.scss';\nimport {capitalizeFirstLetter} from \"../capitalize/capitalize\";\nimport {TiLocationArrow} from 'react-icons/ti';\n\n\nconst HeadContainer = ({query, weather, search, setQuery, setUnits, setWeather, units}) => {\n    const HOST = 'https://api.openweathermap.org/data/2.5/weather';\n    const ACCESS_KEY = '13cf338387990523457c0869f8645ce7';\n    const getResponse = function (lat, lon) {\n\n        fetch(`${HOST}?lat=${lat}&lon=${lon}&units=${units}&APPID=${ACCESS_KEY}`).then(response => {\n            return response.json()\n        }).then(data => {\n            setWeather(data)\n        })\n    }\n\n    const getLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(showPosition);\n        } else {\n            console.log(\"Geolocation is not supported by this browser.\");\n        }\n    }\n\n    function showPosition(position) {\n        getResponse(position.coords.latitude, position.coords.longitude)\n    }\n\n    const cityList = cities.filter(city => city.name.includes(query));\n    const onChangeInputValue = (e) => {\n        e.target.value ? setQuery(e.target.value) : setQuery('');\n    }\n    const onDisplayInput = () => {\n        document.querySelector('.container-city').style.display = 'block';\n        document.querySelector('.block-choice').style.display = 'none';\n        document.querySelector('.current-city').style.display = 'none';\n        if(window.screen.width < 670) {\n            document.querySelector('.temperature-toggle-block').style.display = 'none';\n        }\n    }\n    useEffect(() => {\n        getLocation()\n    }, [])\n\n    return (\n        <div className='head-container'>\n            <div>\n                <div className='block-head'>\n                    <div className='block-info-weather'>\n                        <div className='current-city'>{weather.name ? weather.name : ''}</div>\n                        <CitySelection type=\"text\"\n                                       className='search'\n                                       value={capitalizeFirstLetter(query)}\n                                       onChange={onChangeInputValue}\n                                       onKeyPress={search}\n                                       weather={weather}\n                                       query={query}\n                                       cityList={cityList}\n                                       setQuery={setQuery}\n                        />\n                        <TemperatureToggle search={search}\n                                           getLocation={getLocation}\n                                           setUnits={setUnits}\n                        />\n                    </div>\n                    <div className='block-choice'>\n                        <button className='block-choice__city'\n                                onClick={onDisplayInput}>\n                            ะกะผะตะฝะธัั ะณะพัะพะด\n                        </button>\n                        <button className='block-choice__position'\n                                onClick={getLocation}><TiLocationArrow\n                            className='block-choice__img'/>\n                            ะะพะต ะผะตััะพะฟะพะปะพะถะตะฝะธะต\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default HeadContainer;","import React from 'react';\nimport {capitalizeFirstLetter} from \"../capitalize/capitalize\";\n\nconst WeatherProperties = ({weather}) => {\n\n    return (\n        <div className='city'>\n            <div className='city-info'>\n                <img className='city-icon'\n                     src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@4x.png`}\n                     alt={weather.weather[0].description}\n                />\n                <div className='city-temp'>\n                    {Math.round(weather.main.temp)}\n                    <sup>&deg;</sup>\n                </div>\n            </div>\n            <div className='city-description'>{capitalizeFirstLetter(weather.weather[0].description)}</div>\n            <div className='city-properties'>\n\n                <div className='city-properties-first-group'>\n                <div className='city-properties-item'>\n                        <div className='item__prop'>ะะตัะตั</div>\n                        <div className='item__value'>{weather.wind.speed} ะผ/ั</div>\n                </div>\n                        <div className='city-properties-item'>\n                            <div className='item__prop'>ะะฐะฒะปะตะฝะธะต</div>\n                            <div className='item__value'>{weather.main.pressure} ะผะผ ัั. ัั.</div>\n                        </div>\n                </div>\n                <div className='city-properties-second-group'>\n                    <div className='city-properties-item'>\n                        <div className='item__prop'>ะะปะฐะถะฝะพััั</div>\n                        <div className='item__value'>{weather.main.humidity}%</div>\n                    </div>\n                    <div className='city-properties-item'>\n                        <div className='item__prop'>ะะตัะพััะฝะพััั ะดะพะถะดั</div>\n                        <div className='item__value'>{weather.clouds.all}%</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default WeatherProperties;","import React, {useState} from 'react';\nimport axios from \"axios\";\nimport HeadContainer from \"./components/HeadContainer\";\nimport WeatherProperties from \"./components/WeatherProperties\";\nimport './App.scss';\nimport {removeCitiesList} from \"./removeList/removeList\";\nimport {Spinner} from \"react-bootstrap\";\n\n\nconst App = () => {\n    const [query, setQuery] = useState('');\n    const [weather, setWeather] = useState({});\n    const [units, setUnits] = useState('metric');\n\n    const URL = 'https://api.openweathermap.org/data/2.5/weather';\n    const API_KEY = '13cf338387990523457c0869f8645ce7';\n\n    const fetchWeather = async (query) => {\n        const {data} = await axios.get(URL, {\n            params: {\n                q: query,\n                units: units,\n                APPID: API_KEY,\n            }\n        })\n        return data\n    }\n\n    const search = async (e) => {\n        if (e.target.innerHTML === 'OK' || e.key === 'Enter' || e.target.innerHTML === 'C' || e.target.innerHTML === 'F') {\n            const data = await fetchWeather(query);\n            setWeather(data);\n            removeCitiesList();\n        }\n    }\n\n    return (\n        <div className='wrapper'>\n            <div className=\"main-container\">\n                <HeadContainer query={query}\n                               search={search}\n                               weather={weather}\n                               setQuery={setQuery}\n                               setUnits={setUnits}\n                               setWeather={setWeather}\n                               units={units}\n                />\n                {\n                    weather.main ?\n                        <WeatherProperties weather={weather}/>\n                        :\n                        <Spinner animation=\"border\" variant=\"warning\" className='spinner'/>\n                }\n            </div>\n        </div>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}